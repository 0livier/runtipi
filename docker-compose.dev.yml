version: "3.7"

services:
  tipi-db:
    container_name: tipi-db
    image: postgres:latest
    restart: on-failure
    stop_grace_period: 1m
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_DB: ${POSTGRES_DBNAME}
    networks:
      - tipi_main_network

  api:
    build:
      context: .
      dockerfile: Dockerfile.dev
    command: /bin/sh -c "cd /api && npm run dev"
    depends_on:
      - tipi-db
    container_name: api
    ports:
      - 3001:3001
    volumes:
      ## Docker sock
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${PWD}:/tipi
      - ${PWD}/packages/system-api/src:/api/src
      # - /api/node_modules
    environment:
      INTERNAL_IP: ${INTERNAL_IP}
      TIPI_VERSION: ${TIPI_VERSION}
      JWT_SECRET: ${JWT_SECRET}
      ROOT_FOLDER_HOST: ${ROOT_FOLDER_HOST}
      NGINX_PORT: ${NGINX_PORT}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_DB: ${POSTGRES_DBNAME}
    networks:
      - tipi_main_network

  dashboard:
    build:
      context: .
      dockerfile: Dockerfile.dev
    command: /bin/sh -c "cd /dashboard && npm run dev"
    container_name: dashboard
    ports:
      - 3000:3000
    networks:
      - tipi_main_network
    environment:
      - INTERNAL_IP=${INTERNAL_IP}
    volumes:
      - ${PWD}/packages/dashboard/src:/dashboard/src
      # - /dashboard/node_modules
      # - /dashboard/.next
    labels:
      traefik.enable: true
      traefik.http.routers.dashboard.rule: PathPrefix("/") # Host(`tipi.local`) &&
      traefik.http.routers.dashboard.entrypoints: webinsecure
      traefik.http.routers.dashboard.service: dashboard
      traefik.http.services.dashboard.loadbalancer.server.port: 3000

networks:
  tipi_main_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.21.21.0/24
